---
# tasks file to install noi

# - name: get pods in {{NAMESPACE}} --- DO SOMETHING WITH THIS
#   k8s_info:
#     kind: pods
#     namespace: "{{NAMESPACE}}"
#     kubeconfig: "{{ kubeconfig }}"
#   register: pods

 # create a namespace - shaould exist already if ASM is installed
- name: create namespace
  k8s:
    name: "{{ NAMESPACE }}"
    kind: namespace
    state: present
    kubeconfig: "{{kubeconfig}}"

- name: get the OCP registry
  shell:
    cmd: "oc get route -n openshift-image-registry default-route -o jsonpath='{.spec.host}'  --kubeconfig {{ kubeconfig }}"
  register: registry
  changed_when: False

- name: create working dir
  file:
    name: "{{workingdir}}"
    state: directory

- name: extract tar file
  unarchive:
    src: "{{sourcedir}}/{{noi_tarfile}}"
    remote_src: True
    dest: "{{workingdir}}/"
    creates: "{{workingdir}}/ibm-netcool-prod-2.1.3-x86_64.tar.gz"

- name: copy SecurityContextConstraint file
  copy:
    src: files/ibm-noi-scc.yaml
    dest: "{{workingdir}}/ibm-noi-scc.yaml"

- name: create SCC
  k8s:
    src: "{{workingdir}}/ibm-noi-scc.yaml"
    namespace: "{{NAMESPACE}}"
    state: present

- name: apply scc
  shell:
    cmd: "oc adm policy add-scc-to-user ibm-noi-scc system:serviceaccount:{{NAMESPACE}}:noi-service-account"

- name: docker login
  shell:
    cmd: "docker login -u $(oc whoami) -p $(oc whoami -t) {{registry.stdout}}"
  register: docker
  changed_when: False

- name: docker login result
  debug:
    msg: "{{docker}}"
    verbosity: 1

- name: check catalog
  shell:
    cmd: "cloudctl catalog charts | grep ibm-netcool-prod"
  register: catalog_result
  changed_when: False
  failed_when: catalog_result.rc > 1

- name: catalog contents
  debug:
    msg: "{{catalog_result.stdout}}"

- name: load catalog
  shell:
    cmd: "cloudctl catalog load-archive --archive {{workingdir}}/ibm-netcool-prod-2.1.3-x86_64.tar.gz --registry {{registry.stdout}}/{{ NAMESPACE }}"
  register: load_catalog
  when: catalog_result.stdout == ''

- name: catalog load result
  debug:
    msg: "{{load_catalog}}"
  when: catalog_result.stdout == ''

- name: update the repo with the new charts
  shell:
    cmd: "helm repo update"
  when: catalog_result.stdout == ''

- name: get values.yaml template
  template:
    src: templates/values.yaml.j2
    dest: "{{workingdir}}/values.yaml"
    variable_start_string: "[["
    variable_end_string: "]]"

# - name: stop now
#   meta: end_play

- name: check the chart is now available
  shell:
    cmd: helm search icp-repo/ibm-netcool-prod
  register: chart_check
  failed_when: chart_check.stdout == ''

- name: install noi
  shell:
    cmd: 'helm install icp-repo/ibm-netcool-prod -f {{workingdir}}/values.yaml --tls --name noi --namespace {{NAMESPACE}}'
